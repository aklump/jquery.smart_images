/**
 * BreakpointX ("Crossing") JavaScript Module v0.3
 * 
 *
 * Define responsive breakpoints, register callbacks when crossing, with optional css class handling.
 *
 * Copyright 2015-2017, Aaron Klump <sourcecode@intheloftstudios.com>
 * @license Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Wed Mar 29 11:11:02 PDT 2017
 */
var BreakpointX=function($,t){function i(t,i){this.version="0.3",this.settings=$.extend({},this.options,i),this.current=null,this.last={},this.actions={},this.breakpoints={},this.aliases=[],this.init(t)}return i.prototype.options={addClassesTo:null,classPrefix:"bpx-",resizeThrottle:200},i.prototype.init=function(i){var s=this,a,n={};if(i instanceof Array){var e,r,o,l;for(a in i)l=1*a+1,void 0!==i[l]?(e="max",r=1*i[l]-1):(e="min",r=i[a]),o=0===r?"":"px",n["("+e+"-width: "+r+o+")"]=i[a];i=n}if("object"!=typeof i)throw"Object needs format {alias: minWidth}.";s.aliases=[];var h=[],d,u,c,p;for(d in i)u=parseInt(i[d],10),h.push([d,u]);h.sort(function(t,i){return t[1]-i[1]});for(a in h)a*=1,c=h[a][1],d=h[a][0],s.aliases.push(d),p=void 0===h[a+1]?null:h[a+1][1]-1,s.breakpoints[d]=[c,p];if(s.reset(),this.settings.addClassesTo&&s.add("both",this.aliases,this.cssHandler),s.actions.hasOwnProperty("bigger")||s.actions.hasOwnProperty("smaller")||s.actions.hasOwnProperty("both")){var f=s.getWindowWidth();s.callbacksHandler(f,!0);var v=s.settings.resizeThrottle,b=null;$(t).resize(function(){clearTimeout(b),b=setTimeout(function(){f=s.getWindowWidth(),s.callbacksHandler(f)},v)})}return s},i.prototype.getWindowWidth=function(){var i,s=t,a="inner";return"innerWidth"in t||(a="client",s=document.documentElement||document.body),i=s[a+"Width"]},i.prototype.cssHandler=function(t,i,s){var a=this.settings.addClassesTo instanceof jQuery?this.settings.addClassesTo:$(this.settings.addClassesTo),n=this.settings.classPrefix;a.removeClass(n+"smaller").removeClass(n+"bigger").removeClass(n+t.name).addClass(n+i.name),s&&a.addClass(n+s)},i.prototype.callbacksHandler=function(t,i){var s=this,a=s.alias(t),n=a!==s.last.alias;if(n||i){var e=n?t>s.last.width[0]?"bigger":"smaller":null,r="smaller"===e?s.last.alias:a,o=[s.actions.both];e&&o.push(s.actions[e]);for(var l in o){var h={minWidth:s.breakpoints[s.last.alias][0],maxWidth:s.breakpoints[s.last.alias][1],name:s.last.alias},d={minWidth:s.breakpoints[a][0],maxWidth:s.breakpoints[a][1],name:a};for(var u in o[l][r])o[l][r][u].call(s,h,d,e)}s.last={width:s.value(a),alias:a,direction:e},s.current=a}},i.prototype.reset=function(){return this.actions={bigger:[],smaller:[],both:[]},this.last={width:null,alias:null,direction:null},this.last.alias=this.alias(t.innerWidth),this.last.width=this.value(this.last.alias),this.current=this.last.alias,this},i.prototype.alias=function(t){if("first"===t)return this.aliases[0];if("last"===t)return this.aliases[this.aliases.length-1];var i;for(var s in this.breakpoints){var a=this.breakpoints[s][0];if(i=i||s,t<a)return i;i=s}return i},i.prototype.value=function(t){return void 0===this.breakpoints[t]?null:this.breakpoints[t]},i.prototype.add=function(t,i,s){var a=this;if(void 0===a.actions[t])throw"Bad direction: "+t;if(0===i.length)throw"Breakpoints must be an array of aliases.";if("function"!=typeof s)throw"Callback must be a function";for(var n in i){var e=i[n];if(a.aliases.indexOf(e)===-1)throw'Unknown alias: "'+e+'"';a.actions[t][e]=a.actions[t][e]||[],a.actions[t][e].push(s)}return this},i}(jQuery,window);