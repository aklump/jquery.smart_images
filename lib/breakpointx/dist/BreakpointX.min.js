/**
 * BreakpointX ("Crossing") JavaScript Module v0.3.4
 * 
 *
 * Define responsive breakpoints, register callbacks when crossing, with optional css class handling.
 *
 * Copyright 2015-2017, Aaron Klump <sourcecode@intheloftstudios.com>
 * @license Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Wed Mar 29 18:38:51 PDT 2017
 */
var BreakpointX=function($,t){function s(t,s){this.version="0.3.4",this.settings=$.extend({},this.options,s),this.settings.breakpoints=t,this.current=null,this.last={},this.actions={},this.breakpoints={},this.aliases=[],this.init(t)}return s.prototype.options={addClassesTo:null,classPrefix:"bpx-",resizeThrottle:200},s.prototype.init=function(s){var i=this,a,n={};if(s instanceof Array){var e,r,o,l;for(a in s)l=1*a+1,void 0!==s[l]?(e="max",r=1*s[l]-1):(e="min",r=s[a]),o=0===r?"":"px",n["("+e+"-width: "+r+o+")"]=s[a];s=n}if("object"!=typeof s)throw"Object needs format {alias: minWidth}.";i.aliases=[];var h=[],d,u,c,p;for(d in s)u=parseInt(s[d],10),h.push([d,u]);h.sort(function(t,s){return t[1]-s[1]});for(a in h)a*=1,c=h[a][1],d=h[a][0],i.aliases.push(d),p=void 0===h[a+1]?null:h[a+1][1]-1,i.breakpoints[d]=[c,p];if(i.reset(),this.settings.addClassesTo&&i.add("both",this.aliases,this.cssHandler),i.actions.hasOwnProperty("bigger")||i.actions.hasOwnProperty("smaller")||i.actions.hasOwnProperty("both")){var f=i.getWindowWidth();i.callbacksHandler(f,!0);var v=i.settings.resizeThrottle,b=null;$(t).resize(function(){clearTimeout(b),b=setTimeout(function(){f=i.getWindowWidth(),i.callbacksHandler(f)},v)})}return i},s.prototype.getWindowWidth=function(){var s,i=t,a="inner";return"innerWidth"in t||(a="client",i=document.documentElement||document.body),s=i[a+"Width"]},s.prototype.cssHandler=function(t,s,i){var a=this.settings.addClassesTo instanceof jQuery?this.settings.addClassesTo:$(this.settings.addClassesTo),n=this.settings.classPrefix;a.removeClass(n+"smaller").removeClass(n+"bigger").removeClass(n+t.name).addClass(n+s.name),i&&a.addClass(n+i)},s.prototype.callbacksHandler=function(t,s){var i=this,a=i.alias(t),n=a!==i.last.alias;if(n||s){var e=n?t>i.last.width[0]?"bigger":"smaller":null,r="smaller"===e?i.last.alias:a,o=[i.actions.both];e&&o.push(i.actions[e]);for(var l in o){var h={minWidth:i.breakpoints[i.last.alias][0],maxWidth:i.breakpoints[i.last.alias][1],name:i.last.alias},d={minWidth:i.breakpoints[a][0],maxWidth:i.breakpoints[a][1],name:a};for(var u in o[l][r])o[l][r][u].call(i,h,d,e)}i.last={width:i.value(a),alias:a,direction:e},i.current=a}},s.prototype.reset=function(){return this.actions={bigger:[],smaller:[],both:[]},this.last={width:null,alias:null,direction:null},this.last.alias=this.alias(t.innerWidth),this.last.width=this.value(this.last.alias),this.current=this.last.alias,this},s.prototype.alias=function(t){if("first"===t)return this.aliases[0];if("last"===t)return this.aliases[this.aliases.length-1];var s;for(var i in this.breakpoints){var a=this.breakpoints[i][0];if(s=s||i,t<a)return s;s=i}return s},s.prototype.value=function(t){return void 0===this.breakpoints[t]?null:this.breakpoints[t]},s.prototype.add=function(t,s,i){var a=this;if(void 0===a.actions[t])throw"Bad direction: "+t;if(0===s.length)throw"Breakpoints must be an array of aliases.";if("function"!=typeof i)throw"Callback must be a function";for(var n in s){var e=s[n];if(a.aliases.indexOf(e)===-1)throw'Unknown alias: "'+e+'"';a.actions[t][e]=a.actions[t][e]||[],a.actions[t][e].push(i)}return this},s}(jQuery,window);